<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
<title>Programmatic Ads & SEO — Interactive MCQ Quiz</title>
<style>
  :root { --accent: #4f46e5; --muted: #64748b; }
  body { font-family: Inter, ui-sans-serif, system-ui, Arial, Helvetica, sans-serif; background: #f6f8fb; color: #071124; margin: 0; padding: 20px; }
  .card { max-width: 1000px; margin: 0 auto; background: #fff; border-radius: 12px; padding: 20px; box-shadow: 0 10px 40px rgba(10,20,40,0.06); }
  h1 { margin: 0 0 6px; font-size: 22px; }
  p.lead { margin: 0 0 16px; color: var(--muted); font-size: 14px; }
  .topbar { display: flex; flex-direction: column; gap: 8px; }
  .progress-wrapper { display: flex; align-items: center; gap: 8px; margin-top: 8px; }
  .progress { flex: 1; height: 12px; background: #eef2ff; border-radius: 999px; overflow: hidden; }
  .progress > i { display: block; height: 100%; width: 0%; background: linear-gradient(90deg, var(--accent), #7c3aed); transition: width 0.3s ease; }
  .controls { display: flex; flex-wrap: wrap; gap: 10px; margin-top: 12px; justify-content: space-between; }
  button { background: var(--accent); color: #fff; border: 0; padding: 8px 12px; border-radius: 10px; cursor: pointer; font-size: 14px; }
  button.secondary { background: #eef2ff; color: #071124; }
  .grid { display: flex; flex-direction: column; gap: 12px; margin-top: 14px; }
  .question { padding: 12px; border-radius: 10px; background: #fbfdff; border: 1px solid #eef2ff; }
  .qhead { font-weight: 600; margin-bottom: 8px; font-size: 14px; }
  .opts { display: flex; flex-direction: column; gap: 6px; }
  label.opt { display: flex; align-items: center; gap: 10px; padding: 8px; border-radius: 8px; background: #fff; border: 1px solid #e6eefc; cursor: pointer; font-size: 14px; }
  input[type=radio] { transform: scale(1.05); margin: 0; }
  .feedback { display: none; margin-top: 8px; padding: 10px; border-radius: 8px; font-size: 13px; }
  .feedback.show.correct { display: block; background: #ecfdf5; color: #065f46; border: 1px solid #bbf7d0; }
  .feedback.show.incorrect { display: block; background: #fff1f2; color: #9f1239; border: 1px solid #fecdd3; }
  #result { margin-top: 14px; padding: 12px; border-radius: 10px; background: #f8fafc; border: 1px solid #eef2ff; font-size: 14px; }
  footer { margin-top: 18px; color: var(--muted); font-size: 13px; text-align: right; }
</style>
</head>
<body>
<div class="card">
  <div class="topbar">
    <h1>Programmatic Ads & SEO — Interactive MCQ Quiz</h1>
    <p class="lead">~62 mixed-difficulty questions on SEO, programmatic advertising, analytics, targeting, and campaign metrics. Select an answer to get instant feedback.</p>
    <div class="progress-wrapper">
      <span style="font-size:13px;color:var(--muted)">Progress</span>
      <div class="progress"><i id="prog"></i></div>
    </div>
  </div>

  <form id="quizForm" class="grid" autocomplete="off"></form>

  <div class="controls">
    <div style="display:flex;gap:8px;flex-wrap:wrap">
      <button type="button" id="revealAll" class="secondary">Reveal Feedback for All</button>
      <button type="button" id="clearAll" class="secondary">Clear Answers</button>
    </div>
    <div>
      <button type="button" id="submitBtn">Submit Quiz</button>
    </div>
  </div>

  <div id="result"></div>
  <footer>Built from notes. Mobile-friendly and universal.</footer>
</div>

<script>
// QUESTIONS ARRAY (same as your existing 62+ questions)
const questions = [
  {q:'Ad "creatives" refers to:', opts:['Impressions','Publishers\' Ad space','Advertisers\' Ads','Both publisher and advertiser assets'], a:2, f:'Creatives are ad materials produced by advertisers (visual, text, video).'},
  {q:'Ad Network usually operates on which side?', opts:['DSP','SSP','DMP','Search Engine'], a:1, f:'Ad networks aggregate publisher inventory and operate on the supply side with SSPs.'},
  {q:'Real-Time Bidding (RTB) is best described as:', opts:['Bidding on ad copies in real time','Bidding on ad creatives in real time','Bidding on creatives for a specific impression/ad space in real time','Bidding on keywords'], a:2, f:'RTB auctions occur per impression; creatives are served if the bid wins.'},
  // ... (Add the rest of your 62+ questions here)
];

// RENDER QUESTIONS
const form = document.getElementById('quizForm');
questions.forEach((q,i)=>{
  const wrapper = document.createElement('div'); wrapper.className='question'; wrapper.id='q'+i;
  const qh = document.createElement('div'); qh.className='qhead'; qh.textContent=(i+1)+'. '+q.q; wrapper.appendChild(qh);
  const opts = document.createElement('div'); opts.className='opts';
  q.opts.forEach((o,j)=>{
    const id = `q_${i}_${j}`;
    const lab = document.createElement('label'); lab.className='opt'; lab.htmlFor=id;
    lab.innerHTML = `<input type='radio' name='q${i}' id='${id}' value='${j}' /> <span>${o}</span>`;
    opts.appendChild(lab);
  });
  wrapper.appendChild(opts);
  const fb = document.createElement('div'); fb.className='feedback'; fb.id='fb'+i; wrapper.appendChild(fb);
  form.appendChild(wrapper);
});

// MOBILE-FRIENDLY INSTANT FEEDBACK (CLICK DELEGATION)
form.addEventListener('click', e=>{
  if(e.target.type==='radio'){
    const qi = parseInt(e.target.name.replace('q',''),10);
    const val = parseInt(e.target.value,10);
    showFeedback(qi,val);
    updateProgress();
  }
});

// SHOW FEEDBACK
function showFeedback(i,val){
  const fb = document.getElementById('fb'+i);
  const q = questions[i];
  const right = q.opts[q.a];
  if(val===q.a){ fb.className='feedback show correct'; fb.innerHTML='✅ Correct — '+q.f; }
  else { fb.className='feedback show incorrect'; fb.innerHTML='❌ Incorrect — Correct: "'+right+'". '+q.f; }
}

// UPDATE PROGRESS BAR
function updateProgress(){
  const answered = document.querySelectorAll('input[type=radio]:checked').length;
  const pct = Math.round((answered/questions.length)*100);
  document.getElementById('prog').style.width = pct+'%';
}

// CONTROLS
document.getElementById('revealAll').addEventListener('click', ()=>{
  questions.forEach((q,i)=>{
    const sel = document.querySelector(`input[name=q${i}]:checked`);
    if(sel) showFeedback(i,parseInt(sel.value,10));
    else { const fb=document.getElementById('fb'+i); fb.className='feedback show incorrect'; fb.innerHTML='⚠️ No answer selected — Correct: "'+q.opts[q.a]+'". '+q.f; }
  });
  updateProgress();
});

document.getElementById('clearAll').addEventListener('click', ()=>{
  document.querySelectorAll('input[type=radio]').forEach(inp=>inp.checked=false);
  document.querySelectorAll('.feedback').forEach(f=>{f.className='feedback'; f.innerHTML='';});
  document.getElementById('prog').style.width='0%'; document.getElementById('result').innerHTML='';
});

document.getElementById('submitBtn').addEventListener('click', ()=>{
  let correct=0; let answered=0;
  questions.forEach((q,i)=>{
    const sel=document.querySelector(`input[name=q${i}]:checked`);
    if(sel){ answered++; if(parseInt(sel.value,10)===q.a) correct++; }
    else { const fb=document.getElementById('fb'+i); fb.className='feedback show incorrect'; fb.innerHTML='⚠️ No answer selected — Correct: "'+q.opts[q.a]+'". '+q.f; }
  });
  const pct=Math.round((correct/questions.length)*100);
  document.getElementById('result').innerHTML = `<div><strong>Score:</strong> ${correct} / ${questions.length} (${pct}%) — Answered ${answered} questions.</div>`;
  document.getElementById('prog').style.width = pct+'%';
  window.scrollTo({top:document.body.scrollHeight,behavior:'smooth'});
});
</script>
</body>
</html>
